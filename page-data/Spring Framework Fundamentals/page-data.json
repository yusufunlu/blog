{"componentChunkName":"component---src-templates-blog-post-js","path":"/Spring Framework Fundamentals/","result":{"data":{"site":{"siteMetadata":{"title":"yusufunlu","author":"Yusuf Unlu"}},"markdownRemark":{"id":"9fed8708-1ee2-5bcc-be22-1ce2e0ee68c3","html":"<h2 id=\"bean\"><a href=\"#bean\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bean</h2>\n<p>singleton is the default scope for Spring beans. Business logic should be stateless and singleton is stateless too.\nThe prototype scope is better for stateful beans to avoid multithreading issues.</p>\n<h2 id=\"scope\"><a href=\"#scope\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h2>\n<p>Spring daha yokken de bildiğimiz bir kavram scope. Bir değişkenin etki alanıdır. Java’da bir değişken class için yaratılmışsa etki alanı yani scope’u o class’tır. Eğer değişken method içinde yaratılmışsa. Aynen bu şekilde Spring’in bean’i de bir session için yaratılmış da olabilir sadece tek bir http request için de yaratılmış da olabilir. Bu durumda gelecek 2. request için farklı bir bean yaratılır. </p>\n<p>Bu şekilde 5 scope seçeneğimiz vardır. </p>\n<ul>\n<li><strong>Singleton</strong>: Default yani özel bir ayar yapmazsak bean’ler singleton çalışır. Her bir Spring container veya context(application context) içinde o bean’den bir tane olmasını sağlar. Eğer JVM üzerinde birden fazla Spring container olursa singleton itemler da çoklanır.  </li>\n<li><strong>Prototype</strong>: Spring container’dan bu bean’i her istediğimizde bize bean’i yeniden üretir ve uniq(eşsiz) olur.</li>\n<li>Session</li>\n<li>Request</li>\n<li>Global</li>\n</ul>\n<h2 id=\"opinionated\"><a href=\"#opinionated\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Opinionated</h2>\n<p>Spring boot has Opinionated Defaults Configurations. If you include the spring boot starter pom for jpa, you’ll get autoconfigured for you an in memory database, a hibernate entity manager, and a simple datasource. </p>\n<h2 id=\"stereotype\"><a href=\"#stereotype\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>stereotype</h2>\n<p>Annotations in spring are @Component and its derivations @Service, @Repository, and @Controller.\nSpring context will autodetect these classes when annotation-based configuration and classpath scanning is used</p>\n<h2 id=\"service\"><a href=\"#service\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@Service</h2>\n<p>It can be applied only to classes</p>\n<h2 id=\"controller\"><a href=\"#controller\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a> @Controller</h2>\n<p>It can be applied to classes only.\nMostly being used with @RequestMapping handler\nThe dispatcher scans such annotated classes for mapped methods and detects @RequestMapping annotations</p>\n<h2 id=\"embedded-container\"><a href=\"#embedded-container\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Embedded Container</h2>\n<p>Spring web includes tomcat as default container\nmove away from deploying java web applications to a java servlet container (or application server) in the form of a war file (or ear file) and instead package the application as an executable jar with an embedded servlet/HTTP server like jetty. </p>","timeToRead":1,"frontmatter":{"title":"Spring Framework Fundamentals","date":"April 24, 2020","spoiler":"Beans, Scopes, Dependancy Injection, Bean Factory, Context, Stereotype, Properties, autowiring, transaction management"},"fields":{"slug":"/Spring Framework Fundamentals/","langKey":"en"}}},"pageContext":{"slug":"/Spring Framework Fundamentals/","previous":null,"next":{"fields":{"slug":"/First post/","langKey":"en","directoryName":"First post","maybeAbsoluteLinks":["/test/"]},"frontmatter":{"title":"First post"}},"translations":["tr"],"translatedLinks":[]}},"staticQueryHashes":["336482444"]}